{"componentChunkName":"component---src-pages-blog-post-js","path":"/router-access/","result":{"data":{"site":{"siteMetadata":{"title":"klloo"}},"markdownRemark":{"id":"93888e04-fcfa-56da-8dee-ce7a7d61dcb8","excerpt":"로그인 기능을 구현하다보면 반드시 인증을 해야만 접근할 수 있는 페이지와 반드시 인증을 하지 않아야만 접근할 수 있는 페이지가 나뉘게 됩니다. 이런 부분들을 react-router-dom(v6) 에서 어떻게 구현했는지 적어보려합니다! PrivateRoute…","html":"<p>로그인 기능을 구현하다보면 반드시 인증을 해야만 접근할 수 있는 페이지와 반드시 인증을 하지 않아야만 접근할 수 있는 페이지가 나뉘게 됩니다.</p>\n<p>이런 부분들을 <strong>react-router-dom(v6)</strong> 에서 어떻게 구현했는지 적어보려합니다!</p>\n<h2>PrivateRoute 구현</h2>\n<p>먼저 PrivateRoute라는 컴포넌트를 생성했습니다.\n이제 이 컴포넌트를 중첩 라우팅의 상위 라우트로 사용하며 이 컴포넌트 안에서 인증이 필요한 경우와 필요하지 않은 경우를 분기처리하여 알맞은 경로로 이동을 시켜주도록 할 것입니다.</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">import</span> React <span class=\"token keyword\">from</span> <span class=\"token string\">'react'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> Navigate<span class=\"token punctuation\">,</span> Outlet <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'react-router-dom'</span><span class=\"token punctuation\">;</span>\n<span class=\"token keyword\">import</span> <span class=\"token punctuation\">{</span> isEmpty <span class=\"token punctuation\">}</span> <span class=\"token keyword\">from</span> <span class=\"token string\">'lodash'</span><span class=\"token punctuation\">;</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> <span class=\"token keyword\">function</span> <span class=\"token function\">PrivateRoute</span><span class=\"token punctuation\">(</span><span class=\"token parameter\"><span class=\"token punctuation\">{</span> userAuthentication <span class=\"token punctuation\">}</span><span class=\"token operator\">:</span> <span class=\"token punctuation\">{</span> userAuthentication<span class=\"token operator\">?</span><span class=\"token operator\">:</span> boolean <span class=\"token punctuation\">}</span></span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">const</span> isLogin <span class=\"token operator\">=</span> <span class=\"token boolean\">true</span><span class=\"token punctuation\">;</span> <span class=\"token comment\">// 로그인 여부 확인</span>\n\n <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span>userAuthentication<span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 사용자 인증을 해야만하는 페이지</span>\n  <span class=\"token comment\">// 인증을 안했을 경우 메인 페이지로, 했을 경우 해당 페이지로</span>\n  <span class=\"token keyword\">if</span> <span class=\"token punctuation\">(</span><span class=\"token operator\">!</span>isLogin<span class=\"token punctuation\">)</span> <span class=\"token keyword\">return</span> <span class=\"token operator\">&lt;</span>Navigate to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n  <span class=\"token comment\">// 인증을 안했을 경우 메인 페이지로, 했을 경우 해당 페이지로</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>isLogin <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Navigate to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Outlet <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span> <span class=\"token keyword\">else</span> <span class=\"token punctuation\">{</span>\n  <span class=\"token comment\">// 인증을 안해야만 하는 페이지</span>\n  <span class=\"token comment\">// 인증을 안했을 경우 해당 페이지로, 인증을 한 상태일 경우 메인 페이지로</span>\n  <span class=\"token keyword\">return</span> <span class=\"token operator\">!</span>isLogin <span class=\"token operator\">?</span> <span class=\"token operator\">&lt;</span>Outlet <span class=\"token operator\">/</span><span class=\"token operator\">></span> <span class=\"token operator\">:</span> <span class=\"token operator\">&lt;</span>Navigate to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">;</span>\n <span class=\"token punctuation\">}</span>\n<span class=\"token punctuation\">}</span></code></pre></div>\n<p>사용자 인증이 되어야만하는지 여부를 Prop으로 받아서 아래와 같이 분기처리를 해주었습니다.</p>\n<ol>\n<li>인증을 해야만하는 경우\na. 인증이 안된 경우 -> 메인 페이지로 이동\nb. 인증된 경우 -> Outlet을 반환하여 하위 라우트의 요소로 접근하도록 함</li>\n<li>인증을 하지 않아야만 하는 경우\na. 인증이 안된 경우 -> Outlet을 반환하여 하위 라우트의 요소로 접근하도록 함\nb. 인증된 경우 -> 메인 페이지로 이동</li>\n</ol>\n<h2>PrivateRoute 적용</h2>\n<p>이제 PrivateRoute를 적용을 해줬습니다</p>\n<div class=\"gatsby-highlight\" data-language=\"javascript\"><pre class=\"language-javascript\"><code class=\"language-javascript\"><span class=\"token keyword\">function</span> <span class=\"token function\">App</span><span class=\"token punctuation\">(</span><span class=\"token punctuation\">)</span> <span class=\"token punctuation\">{</span>\n <span class=\"token keyword\">return</span> <span class=\"token punctuation\">(</span>\n  <span class=\"token operator\">&lt;</span>div<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>GlobalStyle <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span>BrowserRouter<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span>Routes<span class=\"token operator\">></span>\n     <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 인증여부가 상관없는 페이지 */</span><span class=\"token punctuation\">}</span>\n     <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Home <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"*\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Navigate to<span class=\"token operator\">=</span><span class=\"token string\">\"/\"</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n     <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 인증을 안해야만 접속 가능한 페이지 */</span><span class=\"token punctuation\">}</span>\n     <span class=\"token operator\">&lt;</span>Route element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>PrivateRoute userAuthentication<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">false</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/join\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>Join <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n     <span class=\"token punctuation\">{</span><span class=\"token comment\">/* 인증을 해야만 접속 가능한 페이지 */</span><span class=\"token punctuation\">}</span>\n     <span class=\"token operator\">&lt;</span>Route element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>PrivateRoute userAuthentication<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token boolean\">true</span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span><span class=\"token operator\">></span>\n      <span class=\"token operator\">&lt;</span>Route path<span class=\"token operator\">=</span><span class=\"token string\">\"/mypage\"</span> element<span class=\"token operator\">=</span><span class=\"token punctuation\">{</span><span class=\"token operator\">&lt;</span>MyPage <span class=\"token operator\">/</span><span class=\"token operator\">></span><span class=\"token punctuation\">}</span> <span class=\"token operator\">/</span><span class=\"token operator\">></span>\n     <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Route<span class=\"token operator\">></span>\n    <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>Routes<span class=\"token operator\">></span>\n   <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>BrowserRouter<span class=\"token operator\">></span>\n  <span class=\"token operator\">&lt;</span><span class=\"token operator\">/</span>div<span class=\"token operator\">></span>\n <span class=\"token punctuation\">)</span><span class=\"token punctuation\">;</span>\n<span class=\"token punctuation\">}</span>\n\n<span class=\"token keyword\">export</span> <span class=\"token keyword\">default</span> App<span class=\"token punctuation\">;</span></code></pre></div>\n<p>위와같이 중첩라우팅으로 사용할 수 있습니다.\nPrivateRoute를 상위 라우트로, 접근을 제한하고 싶은 라우트를 하위라우트로 하여 적용만 해주면 됩니다!\n인증 여부와 상관없는 페이지들은 그냥 적용을 안해주기만 하면 됩니당\n끝 !</p>","tableOfContents":"<ul>\n<li><a href=\"#privateroute-%EA%B5%AC%ED%98%84\">PrivateRoute 구현</a></li>\n<li><a href=\"#privateroute-%EC%A0%81%EC%9A%A9\">PrivateRoute 적용</a></li>\n</ul>","frontmatter":{"title":"react에서 라우터 접근 제한 구현하기","date":"November 04, 2023","description":"리액트에서 라우터 접근제한을 구현해봤습니다.","category":"프로젝트","icon":"🚫"}},"previous":{"fields":{"slug":"/javascript-prototype/"},"frontmatter":{"title":"자바스크립트 팬이라면 꼭 퍼가..."}},"next":{"fields":{"slug":"/request-hook/"},"frontmatter":{"title":"react에서 api 요청 보내는 훅 만들어보기"}}},"pageContext":{"id":"93888e04-fcfa-56da-8dee-ce7a7d61dcb8","previousPostId":"5ddc2a84-2544-5089-a44c-7cbf84db9151","nextPostId":"39e30c41-de96-52f6-a0d4-8e3117a47583"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}