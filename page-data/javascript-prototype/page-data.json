{"componentChunkName":"component---src-pages-blog-post-js","path":"/javascript-prototype/","result":{"data":{"site":{"siteMetadata":{"title":"klloo"}},"markdownRemark":{"id":"5ddc2a84-2544-5089-a44c-7cbf84db9151","excerpt":"자바스크립트는 객체 지향언어 입니다. 하지만 자바나 c…","html":"<p>자바스크립트는 객체 지향언어 입니다. 하지만 자바나 c++과 같이 유명한 객체 지향 언어와는 조금 다른 점이 있습니다.\n바로 '프로토타입 기반'의 객체지향 언어라는 것입니다!</p>\n<p>자바와 c++같은 언어는 '클래스 기반'의 객체 지향 언어입니다. 클래스 기반 언어에서는 클래스를 이용해 객체를 만들고 클래스를 기반으로 해서 상속을 지원하지만 프로토타입 언어에서는 객체의 원형인 프로토타입을 이용해 객체를 만들고 상속도 프로토타입을 기반으로 합니다. 이렇게 생성된 객체 역시 다른 객체의 프로토타입 객체가 될 수 있습니다.</p>\n<p>대충 설명하자면 이런 것인데 ... 이에 대해 알아보다가 이런 글을 보게 되었습니다. 저는 오늘 처음봤지만 꽤나 유명한 포스팅 같았습니다.</p>\n<p><a href=\"https://medium.com/@limsungmook/%EC%9E%90%EB%B0%94%EC%8A%A4%ED%81%AC%EB%A6%BD%ED%8A%B8%EB%8A%94-%EC%99%9C-%ED%94%84%EB%A1%9C%ED%86%A0%ED%83%80%EC%9E%85%EC%9D%84-%EC%84%A0%ED%83%9D%ED%96%88%EC%9D%84%EA%B9%8C-997f985adb42\">자바스크립트는 왜 프로토타입을 선택했을까</a></p>\n<p>이 글은 클래스와 프로토타입의 차이를 철학적인 관점에서 설명해주고 있습니다.\n저는 자바스크립트의 실행 컨텍스트나 클로저와 같은 개념들이 너무 어렵게 느껴졌습니다. 변수 스코프나 this와 같은 문법들도 제가 접했던 다른 언어들과는 달랐어서 이 부분에 대한 의문도 많았습니다. 그래서... 자바스크립트 진짜 이상하다.. 는 말을 자주 하곤하였습니다!! 하지만 이 글을 읽고 왜 자바스크립트에는 유독 문맥과 관련된 개념이 많을까 하는 의문이 많이 해소되었습니다.</p>\n<p>사실 이 글에서도 자바스크립트가 왜 프로토타입을 선택했는지에 대한 답을 명확히 제시해주고 있지는 않지만 프로토타입이 어떤 근거를 가지고 있는지, 그리고 그 동안 제가 어려워했던 개념들도 프로토타입이라는 하나의 개념으로 귀결하여 설명을 하고 있어서 this 문법이나 호이스팅, 실행 컨텍스트 등에 관해 유기적으로 이해할 수 있었습니다!!</p>\n<p>아무튼... 프로토타입과 클래스를 철학과 함께 설명할 수 있다는 것도 신기했고요 ...이렇게 문과적으로 풀어서 쓴 글 보니깐 .. 아주 유익하고 재밌었습니다 !! 하지만 그럼에도 저는 자바스크립트가 여전히 이상한 것 같아서 이 친구를 이해할 수 있을 때 까지 열심히 공부해야할 것 같습니다!!!</p>","tableOfContents":"","frontmatter":{"title":"자바스크립트 팬이라면 꼭 퍼가...","date":"October 27, 2023","description":"자바스크립트도 눈물있고 어쩌고 저쩌고","category":"JavaScript","icon":"🏛️","tags":["JavaScript"]}},"previous":{"fields":{"slug":"/pagination/"},"frontmatter":{"title":"페이지네이션(Pagination) 컴포넌트 구현하기"}},"next":{"fields":{"slug":"/router-access/"},"frontmatter":{"title":"react에서 라우터 접근 제한 구현하기"}}},"pageContext":{"id":"5ddc2a84-2544-5089-a44c-7cbf84db9151","previousPostId":"36b29581-d23e-593f-be19-fa032181e0bb","nextPostId":"93888e04-fcfa-56da-8dee-ce7a7d61dcb8"}},"staticQueryHashes":["2841359383"],"slicesMap":{}}